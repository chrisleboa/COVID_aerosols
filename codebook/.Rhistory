cox.linear <- coxph(Surv(timedth, death) ~ cigpday + age + as.factor(sex), data = frmgham_recoded, ties = "efron")
summary(cox.linear)
cox.rqs <- coxph(Surv(timedth, death) ~  age + as.factor(sex) + cigpday + rqs20 + rqs40 , data = frmgham_recoded, ties = "efron")
summary(cox.rqs)
# Create a new dataset where age is fixed to its median value:
# (will use this for calculating predicted values)
frmgham_recoded.new$age <- median(frmgham_recoded$age)
# Restrict the new subset to females:
frmgham_recoded.new <- frmgham_recoded[frmgham_recoded$male==0,]
# Predicted hazard ratios (exp[x*beta]) from this new dataset:
haz.linear <- predict(cox.linear, type="risk", newdata=frmgham_recoded.new)
haz.rqs <- predict(cox.rqs, type="risk", newdata=frmgham_recoded.new)
par(mfrow=c(1,2)) # Plot matrix with 1 row and 2 columns:
plot(frmgham_recoded.new$cigpday, haz.linear,
main=expression(paste("Linear cig/day")), log="y",
xlab="Cig/day", ylab=expression(paste("exp(X*",hat(beta),")")))
plot(frmgham_recoded.new$cigpday, haz.rqs,
main=expression(paste("RQS cig/day")), log="y",
xlab="Cig/day", ylab=expression(paste("exp(X*",hat(beta),")")))
par(mfrow=c(1,2)) # Plot matrix with 1 row and 2 columns:
plot(frmgham_recoded.new$cigpday, haz.linear,
main=expression(paste("Linear cig/day")), log="y",
xlab="Cig/day", ylab=expression(paste("exp(X*",hat(beta),")")))
plot(frmgham_recoded.new$cigpday, haz.rqs,
main=expression(paste("RQS cig/day")), log="y",
xlab="Cig/day", ylab=expression(paste("exp(X*",hat(beta),")")))
par(mfrow=c(1,1)) # Re
280+42
2613 - 322 - 39 - 329
871 - 322-39-329
288+89+43
288+43
library(haven)
library(dplyr)
acn <- read.csv(file = "~/Dropbox/Madagascar Mahay Data/papers/ACN/long/ACN cluster level data LONG.csv")
child <- read_dta(file = "~/Dropbox/Madagascar Mahay Data/analysis/all_create/infant_All.dta")
gps <- read_dta(file = "~/Dropbox/Madagascar Mahay Data/gps/created_data/idmen_distanceacn.dta")
merge1 <- left_join(child, acn, by = c("grappe", "year"))
d <- merge1 %>% filter(group.y == "Treatment 4" & !is.na(asqAllScore))
d <- left_join(d, gps, by = c("idmen", "year"))
#generate missing pattern
miss <- as.data.frame(rep(unique(d$idmen), 3))
miss <- miss[order(miss), ]
year <- rep(c(2014, 2015, 2016), 871)
miss <- as.data.frame(cbind(miss,year))
colnames(miss) <- c("idmen", "year")
d <- left_join(miss, d, by = c("idmen", "year"))
d2 <- d %>%
select(idmen, grappe.x, year, asqAllScore, infant_age_months, infant_age_months, idacn_ACDN,
motivation_ACDN, age_ACDN, vocab2_ACDN, education_ACDN,  wealth_ACDN, wealth_ind, distance_acdn) %>%
rename(grappe = grappe.x)
write.csv(d2, file = "/Users/caitlinhemlock/Documents/Courses/HLM/Final project/data.csv", na = "")
table(d2$education_ACDN)
d2 <- d %>%
select(idmen, grappe.x, year, asqAllScore, infant_age_months, infant_age_months, idacn_ACDN,
motivation_ACDN, age_ACDN, vocab2_ACDN, education_ACDN,  wealth_ACDN, wealth_ind, distance_acdn) %>%
rename(grappe = grappe.x) %>%
mutate(education_ACDN = ifelse(education_ACDN == "Secondaire II or higher", 1,
ifelse(education_ACDN == "Secondaire I", 0, NA)))
str(d2$education_ACDN)
write.csv(d2, file = "/Users/caitlinhemlock/Documents/Courses/HLM/Final project/data.csv", na = "")
d2 %>%
group_by(grappe) %>%
summarize(n = n(unique(idmen)))
d2 %>%
group_by(grappe) %>%
summarize(n = length(unique(idmen)))
kids <- d2 %>%
group_by(grappe) %>%
summarize(n = length(unique(idmen)))
View(kids)
kids <- d2 %>%
group_by(grappe) %>%
summarize(n = length(unique(idmen))) %>%
filter(!is.na(grappe))
View(kids)
occ <- d2 %>%
group_by(idmen) %>%
summarize(n = length(unique(idmen))) %>%
filter(!is.na(grappe) & !is.na(asqAllScore))
occ <- d2 %>%
group_by(idmen) %>%
filter(!is.na(grappe) & !is.na(asqAllScore))  %>%
summarize(n = length(unique(idmen)))
View(occ)
occ <- d2 %>%
group_by(idmen) %>%
filter(!is.na(grappe) & !is.na(asqAllScore))  %>%
summarize(n = length())
View(occ)
occ <- d2 %>%
group_by(grappe) %>%
filter(!is.na(grappe) & !is.na(asqAllScore))  %>%
summarize(n = length())
occ <- d2 %>%
group_by(grappe) %>%
filter(!is.na(grappe) & !is.na(asqAllScore))  %>%
summarize(n = n())
View(occ)
mean(kids$n)
kids <- d2 %>%
group_by(grappe) %>%
summarize(n = length(unique(idmen))) %>%
filter(!is.na(grappe)) %>%
summarize(mean = mean(n), min = min(n), max = max(n))
View(kids)
occ <- d2 %>%
group_by(grappe) %>%
filter(!is.na(grappe) & !is.na(asqAllScore))  %>%
summarize(n = n()) %>%
summarize(mean = mean(n), min = min(n), max = max(n))
View(occ)
View(kids)
unique(d2$idacn_ACDN)
length(unique(d2$idacn_ACDN))
idacn<-unique(d2$idacn_ACDN)
idacn[!is.na(),]
idacn[!is.na(idacn),]
idacn[!is.na(idacn)]
idacn <- idacn[!is.na(idacn)]
11/19
sqrt(18779)
View(acn)
mean(acn$motivation_ACDN, na.rm = T)
3.94-3.89
13+97+7+80+60
13+24+14+2
53+80+60
1120+193
20 + 76.84138*.3 + 70.08333*.2 +  (85.71429*.075 + 91.66667*.075 + 82.75862*.075 +  100*.075) + 1
log(1.36)
log(1.23)
log(1.50)
signif(log(1.36), digits = 2)
signif(log(1.23), digits = 2)
signif(log(1.50), digits = 2)
#model 3
signif(log(1.24), digits = 2)
signif(log(1.11), digits = 2)
signif(log(1.37), digits = 2)
#model 2
signif(log(1.36), digits = 2)
#model 2
signif(log(1.36), digits = 2)
signif((log(1.36) - log(1.24)), digits = 2)
signif(0.0537^2, digits = 2)
signif((0 - 0.0537^2), digits = 2)
signif((0 - 0.0537^2), digits = 2)
signif((0 + 0.0537^2), digits = 2)
signif(0.0506^2, digits = 2) #se^2
signif(((log(1.36) - log(1.24))^2), digits = 2) #delta beta^2
signif(0.0506^2, digits = 2) #se^2
signif((0 + 0.0537^2), digits = 2) #mse
signif((((log(1.36) - log(1.24))^2) + 0.0506^2), digits = 2) #mse
#delta mse
signif(((log(1.36) - log(1.24))^2) - (0.0537 - 0.0506), digits = 2)
signif((((log(1.36) - log(1.24))^2) + 0.0506^2), digits = 2) #mse
signif((((log(1.36) - log(1.24))^2) + 0.0506^2), digits = 2) #mse
signif((0 + 0.0537^2), digits = 2) #mse
#delta mse
signif(((log(1.36) - log(1.24))^2) - (0.0537 - 0.0506), digits = 2)
signif(0.0537^2, digits = 2) #se^2
signif(0.0506^2, digits = 2) #se^2
#model 2
signif(log(1.36), digits = 2)
#model 3
signif(log(1.24), digits = 2)
signif(log(1.11), digits = 2)
signif(log(1.37), digits = 2)
signif(log(1.11), digits = 2)
signif(log(1.37), digits = 2)
#model 2
signif(log(1.36), digits = 2)
signif(log(1.23), digits = 2)
signif(log(1.50), digits = 2)
signif(((log(1.36) - log(1.24))^2), digits = 2) #delta beta^2
signif((((log(1.36) - log(1.24))^2) + 0.0506^2), digits = 2) #mse
signif((0 + 0.0537^2), digits = 2) #mse
signif((0 + 0.0537^2), digits = 2) #mse
signif((((log(1.36) - log(1.24))^2) + 0.0506^2), digits = 2) #mse
log(1.24)
(log(1.36) - log(1.24))^2
(0.0537 - 0.0506)
#delta mse
signif(((log(1.36) - log(1.24))^2) - (0.0537^2 - 0.0506^2), digits = 2)
0.011 - 0.0029
log(1.36)
log(1.24)
(log(1.36) - log(1.24)
(log(1.36) - log(1.24)
(log(1.36) - log(1.24))
(log(1.36) - log(1.24))
(log(1.36) - log(1.24))^2
wine = read.table("http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data",
sep=",")
cultivar = wine[ , 1]
wineExp = wine[ , -1]
names(wineExp) = paste("chem", 1:13, sep = "")
options(digits = 3)
sapply(wineExp, sd)
wineExp01 = as.data.frame(scale(wineExp)) #scale function is used for standardization
sapply(wineExp01, sd)
wine.pca = prcomp(wineExp01)
wine.pca$rotation[, 1:5]
```{r}
wine.pca = prcomp(wineExp01)
wine.pca$rotation[, 1:5]
wine.pca$rotation[, 1:5]
#model 3
signif(log(1.24), digits = 2)
signif(log(1.11), digits = 2)
signif(log(1.37), digits = 2)
signif(0.0537^2, digits = 2) #se^2
signif((0 + 0.0537^2), digits = 2) #mse
#model 2
signif(log(1.36), digits = 2)
signif(log(1.23), digits = 2)
#model 2
signif(log(1.36), digits = 2)
signif(log(1.23), digits = 2)
signif(log(1.50), digits = 2)
signif(((log(1.36) - log(1.24))^2), digits = 2) #delta beta^2
(log(1.36) - log(1.24))
signif(((log(1.36) - log(1.24))^2), digits = 2) #delta beta^2
signif(0.0506^2, digits = 2) #se^2
signif((((log(1.36) - log(1.24))^2) + 0.0506^2), digits = 2) #mse
#delta mse
signif(((log(1.36) - log(1.24))^2) - (0.0537^2 - 0.0506^2), digits = 2)
knitr::opts_chunk$set(echo = FALSE)
#libraries
library(dataMaid)
library(dplyr)
library(ggplot2)
library(haven)
#import data
d <- read_dta(file = "~Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421")
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
library(table1)
table1(hosp, data = d)
table1(data = d, hosp)
table1(~hosp, data = d)
makeCodebook(d, file = "Dropbox/COVID aerosols/codebook/COVID aerosols codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook")
summary(d)
#make codebook
makeCodebook(d, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook")
#make codebook
makeCodebook(d, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
summary(d)
knitr::opts_chunk$set(echo = FALSE)
#libraries
library(dataMaid)
library(dplyr)
library(ggplot2)
library(haven)
library(table1)
#import data
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
summary(d)
#make codebook
makeCodebook(d, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
#descriptive statistics
table1(~loctype | hosp, data = d)
#descriptive statistics
test <- d %>% filter(sampletype = "TEST")
#descriptive statistics
test <- d %>% filter(sampletype == "TEST")
table1(~loctype | hosp, data = d)
table(d$sampletype)
#descriptive statistics
test <- d %>% filter(sampletype == "TEST")
table1(~loctype | hosp, data = test)
#make codebook
makeCodebook(d, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
dataMaid: yes
title: COVID Aerosols - Merged Data Codebook
subtitle: "Autogenerated data summary from dataMaid"
date: 2021-01-05 18:06:22
output: pdf_document
geometry: margin=2cm
documentclass: article
header-includes:
- \newcommand{\fullline}{\noindent\makebox[\linewidth]{\rule{\textwidth}{0.4pt}}}
- \renewcommand\familydefault{\sfdefault}
- \newcommand{\bminione}{\begin{minipage}{0.75 \textwidth}}
- \newcommand{\bminitwo}{\begin{minipage}{0.25 \textwidth}}
- \newcommand{\emini}{\end{minipage}}
---
```{r , echo=FALSE, include=FALSE, warning=FALSE, message=FALSE, error=FALSE}
library("ggplot2")
library("pander")
```
---
dataMaid: yes
title: COVID Aerosols - Merged Data Codebook
subtitle: "Autogenerated data summary from dataMaid"
date: 2021-01-05 18:06:22
output: pdf_document
geometry: margin=2cm
documentclass: article
header-includes:
- \newcommand{\fullline}{\noindent\makebox[\linewidth]{\rule{\textwidth}{0.4pt}}}
- \renewcommand\familydefault{\sfdefault}
- \newcommand{\bminione}{\begin{minipage}{0.75 \textwidth}}
- \newcommand{\bminitwo}{\begin{minipage}{0.25 \textwidth}}
- \newcommand{\emini}{\end{minipage}}
---
```{r , echo=FALSE, include=FALSE, warning=FALSE, message=FALSE, error=FALSE}
library("ggplot2")
library("pander")
```
ggAggHist <- getFromNamespace("ggAggHist", "dataMaid")
ggAggBarplot <- getFromNamespace("ggAggBarplot", "dataMaid")
library("ggplot2")
library("pander")
#make codebook
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
#import data
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
test <- d %>% filter(sampletype == "TEST")
#make codebook
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
table(test$tempstart)
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
test <- d %>% filter(sampletype == "TEST")
#make codebook
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
#make codebook
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
#import data
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
setwd("~/Dropbox/COVID aerosols/codebook")
#import data
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
#import data
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
setwd("~/Dropbox/COVID aerosols/clean data/1 4 21")
#import data
d <- read_dta(file = "Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
#import data
d <- read_dta(file = "mergeddata_1421.dta")
#filtering to test data only
test <- d %>% filter(sampletype == "TEST")
#make codebook
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
setwd("~/Dropbox/COVID aerosols/codebook")
#make codebook
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd",
reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd",
reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
makeCodebook(test, file = "Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd",
reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
#make codebook
makeCodebook(test, file = "~Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd",
reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
#import data
d <- read_dta(file = "~/Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
#filtering to test data only
test <- d %>% filter(sampletype == "TEST")
#make codebook
makeCodebook(test, file = "~/Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
knitr::opts_chunk$set(echo = FALSE)
#import data
d <- read_dta(file = "~/Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
#filtering to test data only
test <- d %>% filter(sampletype == "TEST")
d <- read_dta(file = "~/Dropbox/COVID aerosols/clean data/1 4 21/mergeddata_1421.dta")
#filtering to test data only
test <- d %>% filter(sampletype == "TEST")
#make codebook
makeCodebook(test, file = "~/Dropbox/COVID aerosols/codebook/COVID_aerosols_codebook.Rmd", reportTitle = "COVID Aerosols - Merged Data Codebook", replace = T)
long <- test %>% select(sampleid, co2startnew, co2_5minnew, co2_10min, co2_15min,
co2_20min, co2_25minnew, co2endnew)
library(reshape2)
long <- melt(long)
View(long)
View(long)
long <- test %>% select(sampleid, co2startnew, co2_5minnew, co2_10minnew,
co2_15minnew, co2_20minew, co2_25minnew, co2endnew)
long <- test %>% select(sampleid, co2startnew, co2_5minnew, co2_10minnew,
co2_15minnew, co2_20minnew, co2_25minnew, co2endnew)
long <- melt(long)
long <- long %>%
mutate(min = ifelse(variable = co2startnew, 0,
ifelse(variable = co2_5minnew, 5,
ifelse(variable = co2_10minnew, 10,
ifelse(variable = co2_15minnew, 15,
ifelse(variable = co2_20minnew, 20
ifelse(variable = co2_25minnew, 25,
long <- long %>%
mutate(min = ifelse(variable = co2startnew, 0,
ifelse(variable = co2_5minnew, 5,
ifelse(variable = co2_10minnew, 10,
ifelse(variable = co2_15minnew, 15,
ifelse(variable = co2_20minnew, 20,
ifelse(variable = co2_25minnew, 25,
ifelse(variable = co2endnew, 30))))))))
long <- long %>%
mutate(min = ifelse(variable = co2startnew, 0,
ifelse(variable = co2_5minnew, 5,
ifelse(variable = co2_10minnew, 10,
ifelse(variable = co2_15minnew, 15,
ifelse(variable = co2_20minnew, 20,
ifelse(variable = co2_25minnew, 25,
ifelse(variable = co2endnew, 30, NA))))))))
long <- long %>%
mutate(min = ifelse(variable = "co2startnew", 0,
ifelse(variable = "co2_5minnew", 5,
ifelse(variable = "co2_10minnew", 10,
ifelse(variable = "co2_15minnew", 15,
ifelse(variable = "co2_20minnew", 20,
ifelse(variable = "co2_25minnew", 25,
ifelse(variable = "co2endnew", 30, NA))))))))
long <- long %>%
mutate(min = ifelse(variable == "co2startnew", 0,
ifelse(variable == "co2_5minnew", 5,
ifelse(variable == "co2_10minnew", 10,
ifelse(variable == "co2_15minnew", 15,
ifelse(variable == "co2_20minnew", 20,
ifelse(variable == "co2_25minnew", 25,
ifelse(variable == "co2endnew", 30, NA))))))))
long$value <- as.numeric(long$value)
View(long)
geom_line()
theme(legend.position = "none")
ggplot(data = long, aes(x = min, y = value, group = sampleid)) +
geom_point() +
theme(legend.position = "none")
long <- test %>% select(sampleid, co2startnew, co2_5minnew, co2_10minnew,
co2_15minnew, co2_20minnew, co2_25minnew, co2endnew)
long <- melt(long)
long <- long %>%
mutate(min = ifelse(variable == "co2startnew", 0,
ifelse(variable == "co2_5minnew", 5,
ifelse(variable == "co2_10minnew", 10,
ifelse(variable == "co2_15minnew", 15,
ifelse(variable == "co2_20minnew", 20,
ifelse(variable == "co2_25minnew", 25,
ifelse(variable == "co2endnew", 30, NA))))))))
long$value <- as.numeric(long$value)
ggplot(data = long, aes(x = min, y = value, group = sampleid)) +
geom_point() +
theme(legend.position = "none")
ggplot(data = long) +
geom_point(mapping = aes(x = min, y = value, group = sampleid)) +
theme(legend.position = "none")
ggplot(data = long) +
geom_line(mapping = aes(x = min, y = value, group = sampleid)) +
theme(legend.position = "none")
ggplot(data = long, aes(x = min, y = value, group = sampleid, fill = sampleid)) +
geom_line() +
theme(legend.position = "none")
ggplot(data = long, aes(x = min, y = value, group = sampleid, color = sampleid)) +
geom_line() +
theme(legend.position = "none")
ggplot(data = test) +
geom_boxplot(aes(x = result, y = co2startnew))
ggplot(data = test) +
geom_boxplot(aes(x = result, y = co2startnew)) +
geom_jitter()
ggplot(data = test, aes(x = result, y = co2startnew)) +
geom_boxplot() +
geom_jitter()
anova(test$result, test$co2startnew)
test$result <- as.factor(test$result)
anova(test$result, test$co2startnew)
test.new <- test %>%
mutate(result.new = ifelse(result == "Detected in one replicate", "Detected", result))
table(test.new$result.new, test.new$result)
test.new <- test %>%
mutate(result.new = ifelse(result == "Detected in 1 replicate", "Detected", result))
table(test.new$result.new, test.new$result)
table(test.new$result)
table(test.new$result.new)
test.new <- test %>%
mutate(result.new = result,
result.new = ifelse(result == "Detected in 1 replicate", "Detected", result.new))
table(test.new$result.new, test.new$result)
test.new <- test %>%
mutate(result.new = result)
table(test.new$result.new, test.new$result)
test.new <- test %>%
mutate(result.new = result),
test.new <- test %>%
mutate(result.new = result,
result.new = ifelse(result == "Detected in 1 replicate", "Detected", result.new))
table(test.new$result.new, test.new$result)
test.new <- test %>%
mutate(result.new = ifelse(result == "Detected in 1 replicate" | "Detected", 1, 0))
test.new <- test %>%
mutate(result.new = ifelse(result %in% c("Detected in 1 replicate","Detected"), 1, 0))
model <- glm(result.new ~ co2startnew, data = test.new)
summary(model)
model <- glm(result ~ co2startnew, data = test)
model <- glm(result.new ~ co2startnew, data = test.new)
summary(model)
test.new <- test %>%
mutate(result.new = ifelse(result %in% c("Detected in 1 replicate","Detected"), 1, 0),
co2 = co2startnew/100)
model <- glm(result.new ~ co2, data = test.new)
summary(model)
View(test)
model <- glm(result.new ~ co2 + numpeoplestart, data = test.new)
summary(model)
model <- glm(result.new ~ co2 + numpeoplestart + tempstart + humiditystart, data = test.new)
summary(model)
test.new <- test %>%
mutate(result.new = ifelse(result %in% c("Detected"), 1, 0),
co2 = co2startnew/100)
model <- glm(result.new ~ co2 + numpeoplestart + tempstart + humiditystart, data = test.new)
summary(model)
